# Do not change tags in here without changing every other reference to them.
# If adding new buildings, make sure they are uniquely named.

# cost = x #==> cost in $ to build (subject to other modifiers)
# time = x #==> number of months to build.
# modifier = m # a modifier on the province that the building gives
# trigger = t # an and trigger that needs to be fullfilled to build and keep the building
# one_per_country = yes/no # if yes, only one of these can exist in a country
# manufactory = { trade_good trade_good } # list of trade goods that get a production bonus
# onmap = yes/no # show as a sprite on the map

# FROM = owner
# ROOT = province

# Building AI is now mainly hard-coded. The AI will estimate how much it gains yearly from each building,
# convert the value to ducats, and take the building with biggest yearly return as a percentage of the build cost.
# If lower than 1%, the AI will not consider the yearly return worth it.
# It will also require higher yearly return if the economy in not in prime shape.
# Forts' value also get converted to a yearly return based on terrain and strategic position, as well as available budget for fort maintenance.

# AI can still be modded though; it will multiply the yearly return with the value of ai_will_do.
# If you don't want the AI to build a building at all, make ai_will_do become 0.
# AI will consider each building to be worth 0.01 ducats per year as a base, so making ai_will_do above cost will have them build it at some point.
# It will still check whether it can afford a building before doing so though, but may save up to it.


################################################
# Tier 1, 15th Century Buildings
################################################
marketplace = {
	cost = 100
	time = 12

	modifier = {
		province_trade_power_modifier = 0.5
	}
	on_built = {
		add_development_from_building = {
			building = marketplace
			type = production
			value = 1
		}
		if = {
			limit = {
				FROM = { 
					has_dlc = "Mandate of Heaven"
					has_country_flag = mam_trade_building_prosperity_flag
				}
			}
			add_prosperity = 5
		}
		if = {
			limit = {
				FROM = {
					has_estate_privilege = estate_sedentary_subjects_marketplace_bonus
				}
				province_has_center_of_trade_of_level = 1
			}
			add_province_modifier = {
				name = marketplace_bonus_m
				duration = -1
			}
		}
		add_development_from_building = {
			building = marketplace
			type = production
			value = 1
		}
	}
	on_destroyed = {
		if = {
			limit = { has_province_modifier = marketplace_bonus_m }
			remove_province_modifier = marketplace_bonus_m
		}
		remove_development_from_building = {
			building = marketplace
			type = production
			value = 1
		}
		if = {
			limit = {
				FROM = { 
					has_dlc = "Mandate of Heaven"
					has_country_flag = mam_trade_building_prosperity_flag
				}
				
			}
			add_prosperity = -5
		}
	}

	on_construction_started = { } #Fires when you start the construction,  ROOT - Province FROM - Country that started
	on_construction_canceled = { } #Fires when you cancel the construction, ROOT - Province FROM - Country that canceled

	on_obsolete = {
	}

	ai_will_do = {
		factor = 3.5 # Because hard-coded AI only considers what it will gain, not what its enemies will lose.
		modifier = {
			factor = 0.1
			NOT = { province_has_center_of_trade_of_level = 1 }
			NOT = {	province_trade_power = 10 }
		}
		modifier = {
			factor = 1.5
			is_in_capital_area = yes
		}
		modifier = {
			factor = 2.5
			FROM = {
				home_trade_node = {
					owned_by = FROM
					OR = {
						province_has_center_of_trade_of_level = 1
						province_trade_power = 50
					}
				}
			}
		}
		modifier = {
			factor = 1.5
			any_province_in_state = {
				has_merchant = FROM
				OR = {
					province_has_center_of_trade_of_level = 1
					province_trade_power = 50
				}
			}
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

workshop = {
	cost = 100
	time = 12
	modifier = {
		local_production_efficiency = 0.5
	}
	on_built = {
		add_development_from_building = {
			building = workshop
			type = production
			value = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = workshop
			type = production
			value = 1
		}
	}
	on_obsolete = {
	}

	allow_in_gold_provinces = no

	ai_will_do = {
		factor = 5.25
		modifier = {
			factor = 0.75
			NOT = { base_production = 3 }
		}
		modifier = {
			factor = 0.5
			NOT = { base_production = 4 }
			OR = {
				trade_goods = grain
				trade_goods = naval_supplies
				trade_goods = fish
				trade_goods = livestock
				trade_goods = wine
				trade_goods = wool
				trade_goods = tropical_wood
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_province_modifier = stora_kopparberget_modifier
				has_province_modifier = granary_of_the_mediterranean
				has_province_modifier = ven_murano_glass_industry
				has_province_modifier = diamond_mines_of_golconda_modifier
				has_province_modifier = coffea_arabica_modifier
				has_province_modifier = skanemarket
				has_province_modifier = spice_islands_modifier
				has_province_modifier = comet_ore_modifier
				has_province_modifier = paradise_modifier
				has_province_modifier = cerro_rico_modifier
				has_province_modifier = ned_house_of_elzevir
				has_province_modifier = bookmarket_of_x
				has_province_modifier = grand_bank_fisheries
				has_province_modifier = diamond_district
				has_province_modifier = jingdezhen_kilns
				has_province_modifier = perfume_capital
			}
		}
		modifier = {
			factor = 0.1
			NOT = { num_free_building_slots = 2 }
			#NOT = { trade_goods = gold }
			NOT = {
				has_manufactory_trigger = yes
			}
		}
	}
}

temple = {
	cost = 100
	time = 12
	modifier = {
		local_tax_modifier = 0.45
	}
	on_built = {
		on_built_tax_building_effect = yes
		on_province_tax_building_built_estate_privileges_effect = yes
		add_development_from_building = {
			building = temple
			type = tax
			value = 1
		}
		if = {
			limit = {
				FROM = { has_government_attribute = on_church_built_clergy_loyalty }
			}
			FROM = {
				add_estate_loyalty = {
					estate = estate_church
					loyalty = 2
				}
			}
		}
		if = {
			limit = {
				FROM = { has_government_attribute = temples_modifier }
				owned_by = FROM 
			}
			add_province_modifier = {
				name = gov_expanded_temple_rights_mod
				duration = -1
			}
		}
		if = {
			limit = {
				FROM = {
					has_country_flag = mosque_local_unrest_flag
				}
			}
			add_province_modifier = {
				name = turkoman_peaceful_worshipping
				duration = -1
			}
		}
		if = {
			limit = {
				FROM = { has_country_modifier = mam_mosque_great_mosque_generates_crown_land_modifier }
			}
			FROM = {
				change_estate_land_share = {
					estate = all
					share = -0.25
				}
			}
		}
		if = {
			limit = {
				FROM = { has_government_mechanic = blood_gathering_mechanic }
			}
			FROM = {
				add_government_power = {
					mechanic_type = blood_gathering_mechanic
					power_type = blood
					value = 0.5
				}
			}
		}
		if = {
			limit = {
				FROM = { has_country_flag = azt_temples_buffs_flag }
			}
			add_province_modifier = {
				name = azt_religious_classes
				duration = -1
				hidden = yes
			}
		}
	}
	on_destroyed = {
		on_province_tax_building_destroyed_estate_privileges_effect = yes
		remove_development_from_building = {
			building = temple
			type = tax
			value = 1
		}
		if = {
			limit = {
				FROM = {
					has_country_flag = mosque_local_unrest_flag
				}
			}
			remove_province_modifier = turkoman_peaceful_worshipping
		}
		if = {
			limit = {
				FROM = { has_government_attribute = on_church_built_clergy_loyalty }
			}
			FROM = {
				add_estate_loyalty = {
					estate = estate_church
					loyalty = -2
				}
			}
		}
		remove_province_modifier = gov_expanded_temple_rights_mod
		if = {
			limit = {
				FROM = { has_country_modifier = mam_mosque_great_mosque_generates_crown_land_modifier }
			}
			FROM = {
				change_estate_land_share = {
					estate = all
					share = 0.25
				}
			}
		}
		if = {
			limit = {
				FROM = { has_government_mechanic = blood_gathering_mechanic }
			}
			FROM = {
				add_government_power = {
					mechanic_type = blood_gathering_mechanic
					power_type = blood
					value = -1
				}
			}
		}
		if = {
			limit = {
				has_province_modifier = azt_religious_classes
			}
			remove_province_modifier = azt_religious_classes
		}
	}
	on_obsolete = {
	}
	ai_will_do = {
		factor = 5.25
		modifier = {
			factor = 0.3
			NOT = { development = 10 }
		}
		modifier = {
			factor = 0
			NOT = { base_tax = 4 }
			NOT = { trade_goods = gold }
		}
		modifier = {
			factor = 0.3
			NOT = { base_tax = 5 }
			NOT = { trade_goods = gold }
		}
		modifier = {
			factor = 0.75
			NOT = { tolerance_to_this = 0 }
		}
		modifier = {
			factor = 0.8
			NOT = { has_owner_accepted_culture = yes }
			NOT = { has_owner_culture = yes }
			NOT = { culture_group = ROOT }
		}
		modifier = {
			factor = 0.1
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 1.1
			is_in_capital_area = yes
		}
		modifier = {
			factor = 1.25
			FROM = { has_government_attribute = temples_modifier }
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

barracks = {
	cost = 100
	time = 12
	modifier = {
		local_manpower_modifier = 0.5
	}
	on_built = {
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_manpower = 1
			}
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = 0.001
			}
		}
		add_development_from_building = {
			building = barracks
			type = manpower
			value = 1
		}
		update_improved_military_buildings_modifier = {
			building = barracks
		}
		if = {
			limit = {
				owner = {
					has_country_flag = azt_calpulli_houses_flag
				}
			}
			add_province_modifier = {
				name = azt_barracks_households
				duration = -1
				hidden = yes
			}
		}
	}
	on_destroyed = {
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_manpower = -1
			}
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = -0.001
			}
		}
		remove_development_from_building = {
			building = barracks
			type = manpower
			value = 1
		}
		update_improved_military_buildings_modifier = {
			building = barracks
		}
		if = {
			limit = {
				has_province_modifier = azt_barracks_households
			}
			remove_province_modifier = azt_barracks_households
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 6.75
		modifier = {
			factor = 0.2
			NOT = { base_manpower = 3 }
			NOT = { has_building = soldier_households }
		}
		modifier = {
			factor = 0.4
			NOT = { base_manpower = 4 }
			NOT = { has_building = soldier_households }
		}
		modifier = {
			factor = 1.2
			is_in_capital_area = yes
		}	
		modifier = {
			factor = 1.5
			area_for_scope_province = {
				owner = { tag = ROOT }
				province_has_center_of_trade_of_level = 3
			}
		}
		modifier = {
			factor = 2
			has_building = soldier_households
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

shipyard = {
	cost = 100
	time = 12
	build_trigger = {
		has_port = yes
	}
	modifier = {
		naval_forcelimit = 2
		ship_recruit_speed = -0.25
		local_ship_repair = 0.25
		local_ship_cost = -0.05
		local_has_man_of_war = yes
		local_has_galleass = yes
	}
	on_built = {
		add_development_from_building = {
			building = shipyard
			type = production
			value = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = shipyard
			type = production
			value = 1
		}
		if = {
			limit = { has_province_modifier = sca_swe_danish_shipyard }
			remove_province_modifier = sca_swe_danish_shipyard
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 0.4
		modifier = {
			factor = 1.2
			NOT = { has_owner_accepted_culture = yes }
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = trade_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = naval_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = maritime_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = { 
				has_idea_group = exploration_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				colony = 1
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				colony = 2
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				colony = 3
			}
		}
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 0.7
			OR = {
				trade_goods = grain
				trade_goods = fish
				trade_goods = livestock
				trade_goods = wine
			}
		}	
		modifier = {
			factor = 0.5
			FROM = {
				AND = {
					NOT = { has_government_attribute = is_merchant_republic }
					NOT = { num_of_ports = 6 }
				}
			}
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

fort_15th = {
	cost = 200
	time = 30
	modifier = {
		fort_level = 2
	}

	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		if = {
			limit = {
				FROM = { NOT = { mil_tech = 14 } has_government_attribute = on_fort_built_nobles_loyalty }
			}
			FROM = {
				if = {
					limit = {
						has_estate = estate_nobles
					}
					add_estate_loyalty = {
						estate = estate_nobles
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_maratha
					}
					add_estate_loyalty = {
						estate = estate_maratha
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_rajput
					}
					add_estate_loyalty = {
						estate = estate_rajput
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_mamluks
					}
					add_estate_loyalty = {
						estate = estate_mamluks
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_janissaries
					}
					add_estate_loyalty = {
						estate = estate_janissaries
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_ghilman
					}
					add_estate_loyalty = {
						estate = estate_ghilman
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = nomadic_aristocracy
					}
					add_estate_loyalty = {
						estate = nomadic_aristocracy
						loyalty = 5
					}
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_development_of_castles
				}
				NOT = { has_province_modifier = estate_nobles_development_of_castles_mod }
			}
			add_province_modifier = {
				name = estate_nobles_development_of_castles_mod
				duration = -1
			}
		}
		if = {
			limit = {
				FROM = {
					has_country_flag = orm_forts_trade_power_buff_flag
				}
			}
			add_province_modifier = {
				name = orm_forts_buff
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					NOT = {
						full_idea_group = defensive_ideas
					}
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff
				duration = -1
				hidden = yes
			}
		}
		else_if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					full_idea_group = defensive_ideas
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff_buffed
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = { 
				owner = { has_country_flag = ven_defensive_reward_flag }
				NOT = { has_province_modifier = ven_defensive_stance_modifier } 
			}
			add_province_modifier = {
				name = ven_defensive_stance_modifier
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_vegvar_system
				}
				any_neighbor_province = {
					NOT = { owned_by = ROOT }
				}
			}
			add_province_modifier = {
				name = estate_nobles_vegvar_system_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_vegvar_system_modifier
			}
			remove_province_modifier = estate_nobles_vegvar_system_modifier
		}
		if = {
			limit = {
				has_province_modifier = estate_nobles_development_of_castles_mod
			}
			remove_province_modifier = estate_nobles_development_of_castles_mod
		}
		if = {
			limit = {
				has_province_modifier = ven_defensive_stance_modifier
			}
			remove_province_modifier = ven_defensive_stance_modifier
		}
		if = {
			limit = {
				has_province_modifier = orm_forts_buff
			}
			remove_province_modifier = orm_forts_buff
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff
			}
			remove_province_modifier = ned_low_countries_fort_buff
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff_buffed
			}
			remove_province_modifier = ned_low_countries_fort_buff_buffed
		}
		if = {
			limit = { has_province_modifier = fort_barracks_manpower_m }
			remove_province_modifier = fort_barracks_manpower_m
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings destroyed!
	on_obsolete = {
	}

	onmap = yes
	influencing_fort = yes

	ai_will_do = {
		factor = 5
		modifier = {
			factor = 5
			is_capital = yes
			FROM = { num_of_cities = 2 }
			OR = {
				owner = { government = monarchy }
				owner = { government = republic }
				owner = { government = theocracy }
			}
		}
		modifier = {
			factor = 0.5
			island = yes
			NOT = { is_capital = yes }
		}	
		modifier = {
			factor = 0.5
			is_overseas = yes
		}
		modifier = {
			factor = 0
			OR = {
				owner = { government = native }
				FROM = { NOT = { num_of_cities = 2 } }
			}
		}
		modifier = {
			factor = 0.2
			owner = { government = tribal }
		}
		modifier = {
			factor = 0
			any_neighbor_province = {
				owned_by = FROM
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }			
		}
		modifier = {
			factor = 0.5
			any_neighbor_province = {
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }
		}
		modifier = {
			factor = 10
			strategic_location_for_a_fort_trigger = yes
		}
		modifier = {
			factor = 0.6
			NOT = { is_capital = yes }
			OR = {
				has_terrain = grasslands
				has_terrain = farmlands
				has_terrain = desert
				has_terrain = drylands
				has_terrain = steppe
				has_terrain = savannah
				has_terrain = coastal_desert
				has_terrain = coastline
				has_terrain = oasis
				has_terrain = semi_desert
			}
		}
		modifier = {
			factor = 1.4
			OR = {
				has_terrain = forest
				has_terrain = hills
				has_terrain = marsh
				has_terrain = highlands
				has_terrain = jungle
				has_terrain = steppe_mountains
				has_terrain = desert_highlands
			}
		}
		modifier = {
			factor = 1.8
			OR = {
				has_terrain = desert_mountains
				has_terrain = mountain
				has_terrain = himalayas
			}
		}
		modifier = {
			factor = 1.2
			OR = {
				has_province_modifier = arid
				has_province_modifier = tropical
			}
		}
		modifier = {
			factor = 1.25
			FROM = { is_emperor_of_china = yes }
		}
		modifier = {
			factor = 1.2
			province_has_center_of_trade_of_level = 1
		}
	} 
} 


coastal_defence = {

	cost = 200
	time = 12
	build_trigger = {
		has_port = yes
		has_fort_building_trigger = yes
	}
	keep_trigger = {
		has_fort_building_trigger = yes
	}
	modifier = {
		blockade_force_required = 0.5
		hostile_disembark_speed = 0.5
		local_defensiveness = 0.10
	}
	on_built = {
		custom_tooltip = block_slave_raid_area_m_tt
		hidden_effect = { owner = { save_event_target_as = new_owner } }
		area = {
			limit = {
				owned_by = event_target:new_owner
				has_port = yes
				NOT = { has_province_modifier = block_slave_raid_area_m }
			}
			add_province_modifier = {
				name = block_slave_raid_area_m
				duration = -1
			}
		}
	}
	on_destroyed = {
		hidden_effect = { owner = { save_event_target_as = new_owner } }
		if = {
			limit = {
				NOT = {
					area_for_scope_province = {
						owned_by = event_target:new_owner
						OR = {
							has_building = coastal_defence
							has_building = naval_battery
						}
					}
				}
			}
			area = {
				limit = {
					owned_by = event_target:new_owner
					has_province_modifier = block_slave_raid_area_m
				}
				remove_province_modifier = block_slave_raid_area_m
			}
		}
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 0
			NOT = {
				has_fort_building_trigger = yes
			}
		}
		modifier = {
			factor = 0.1
			building_slot_for_manufactory_trigger = yes
		}
	}
}


################################################
# Tier 2, 16th Century Buildings
################################################
courthouse = {
	cost = 100
	time = 12
	modifier = {
		local_state_maintenance_modifier = -0.25
		local_autonomy = -0.1
		local_governing_cost = -0.25
		allowed_num_of_buildings = 1
	}
	on_built = {
		add_development_from_building = {
			building = courthouse
			type = tax
			value = 1
		}
		if = { 
			limit = { 
				FROM = { has_country_flag = fra_courthouse_bonus_flag }
			}
			add_province_modifier = {
				name = fra_improved_court_houses_modifier
				duration = -1 
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = courthouse
			type = tax
			value = 1
		}
		remove_province_modifier = fra_improved_court_houses_modifier
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 0.5
			FROM = {
				NOT = {
					governing_capacity_percentage = 0.5
				}
			}
		}
		modifier = {
			factor = 2
			FROM = { governing_capacity_percentage = 0.8 }
		}
		modifier = {
			factor = 3
			FROM = { governing_capacity_percentage = 1 }
		}
		modifier = {
			factor = 5
			FROM = { governing_capacity_percentage = 1.1 }
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

dock = {
	cost = 100
	time = 12
	build_trigger = {
		has_port = yes
	}
	modifier = {
		local_sailors_modifier = 0.5
		local_has_man_of_war = yes
		local_has_galleass = yes
	}
	
	on_built = {
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_sailors = 200
			}
		}
		add_development_from_building = {
			building = dock
			type = production
			value = 1
		}
		if = {
			limit = {
				FROM = {
					OR = {
						has_estate_privilege = estate_burghers_dock_trade_power
						has_estate_privilege = estate_vaisyas_dock_trade_power
						has_estate_privilege = estate_jains_dock_trade_power
					}
				}
			}
			add_province_modifier = {
				name = dock_trade_power_m
				duration = -1
			}
		}
	}
	
	on_destroyed = {
		if = {
			limit = { has_province_modifier = dock_trade_power_m }
			remove_province_modifier = dock_trade_power_m
		}
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_sailors = -200
			}
		}
		remove_development_from_building = {
			building = dock
			type = production
			value = 1
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 0
			NOT = { base_manpower = 5 }
			NOT = { 
				OR = {
					province_has_center_of_trade_of_level = 1
					province_has_center_of_trade_of_level = 2
					province_has_center_of_trade_of_level = 3
				}
			}
		}
		modifier = {
			factor = 2
			province_has_center_of_trade_of_level = 3	
		}
		modifier = {
			factor = 0
			NOT = { base_manpower = 4 }
		}		
		modifier = {
			factor = 0.1
			NOT = { base_manpower = 5 }
		}
		modifier = {
			factor = 0.5
			FROM = {
				AND = {
					NOT = { has_government_attribute = is_merchant_republic }
					NOT = { num_of_ports = 6 }
				}
			}
		}
		modifier = {
			factor = 0.25
			FROM = {
				sailors_percentage = 0.75
			}
		}
		modifier = {
			factor = 0.7
				NOT = { has_owner_accepted_culture = yes }
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

regimental_camp = {
	cost = 200
	time = 12
	modifier = {
		local_land_forcelimit_modifier = 0.5
	}

	on_built = {
		add_development_from_building = {
			building = regimental_camp
			type = manpower
			value = 1
		}
		hidden_effect = { update_forcelimit_mod = yes }
		update_improved_military_buildings_modifier = {
			building = regimental_camp
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = 0.001
			}
		}
		if = {
			limit = {
				owner = {
					has_country_flag = azt_calpulli_houses_flag
				}
			}
			add_province_modifier = {
				name = azt_conscription_households
				duration = -1
				hidden = yes
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = regimental_camp
			type = manpower
			value = 1
		}
		hidden_effect = { update_forcelimit_mod = yes }
		update_improved_military_buildings_modifier = {
			building = regimental_camp
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = -0.001
			}
		}
		if = {
			limit = {
				has_province_modifier = azt_conscription_households
			}
			remove_province_modifier = azt_conscription_households
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 420
		modifier = {
			factor = 0.75
			local_autonomy = 25
		}
		modifier = {
			factor = 0.75
			local_autonomy = 35
		}
		modifier = {
			factor = 0.75
			local_autonomy = 45
		}
		modifier = {
			factor = 0.75
			local_autonomy = 55
		}
		modifier = {
			factor = 0.75
			local_autonomy = 65
		}
		modifier = {
			factor = 0.75
			local_autonomy = 75
		}
		modifier = {
			factor = 0.75
			local_autonomy = 85
		}
		modifier = {
			factor = 0.3
			NOT = { development = 5 }
		}
		modifier = {
			factor = 0.3
			NOT = { development = 10 }
		}
		modifier = {
			factor = 1.2
			development = 20
		}
		modifier = {
			factor = 1.2
			development = 25
		}
		modifier = {
			factor = 1.2
			development = 30
		}
		modifier = {
			factor = 1.2
			development = 35
		}
		modifier = {
			factor = 1.2
			development = 40
		}
		modifier = {
			factor = 1.2
			development = 45
		}
		modifier = {
			factor = 1.2
			development = 50
		}
		modifier = {
			factor = 1.2
			development = 55
		}
		modifier = {
			factor = 1.2
			development = 60
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = offensive_ideas
			}
		}
		modifier = {
			factor = 1.5
			FROM = {
				has_idea_group = quantity_ideas
			}
		}
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

fort_16th = {
	cost = 400
	time = 30
	make_obsolete = fort_15th
	modifier = {
		fort_level = 4
	}

	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		if = {
			limit = {
				FROM = { NOT = { mil_tech = 19 } has_government_attribute = on_fort_built_nobles_loyalty }
			}
			FROM = {
				if = {
					limit = {
						has_estate = estate_nobles
					}
					add_estate_loyalty = {
						estate = estate_nobles
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_maratha
					}
					add_estate_loyalty = {
						estate = estate_maratha
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_rajput
					}
					add_estate_loyalty = {
						estate = estate_rajput
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_mamluks
					}
					add_estate_loyalty = {
						estate = estate_mamluks
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_janissaries
					}
					add_estate_loyalty = {
						estate = estate_janissaries
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_ghilman
					}
					add_estate_loyalty = {
						estate = estate_ghilman
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = nomadic_aristocracy
					}
					add_estate_loyalty = {
						estate = nomadic_aristocracy
						loyalty = 5
					}
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_development_of_castles
				}
				NOT = { has_province_modifier = estate_nobles_development_of_castles_mod }
			}
			add_province_modifier = {
				name = estate_nobles_development_of_castles_mod
				duration = -1
			}
		}
		if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					NOT = {
						full_idea_group = defensive_ideas
					}
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff
				duration = -1
				hidden = yes
			}
		}
		else_if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					full_idea_group = defensive_ideas
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff_buffed
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_vegvar_system
				}
				any_neighbor_province = {
					NOT = { owned_by = ROOT }
				}
			}
			add_province_modifier = {
				name = estate_nobles_vegvar_system_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_vegvar_system_modifier
			}
			remove_province_modifier = estate_nobles_vegvar_system_modifier
		}
		if = {
			limit = {
				has_province_modifier = estate_nobles_development_of_castles_mod
			}
			remove_province_modifier = estate_nobles_development_of_castles_mod
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff
			}
			remove_province_modifier = ned_low_countries_fort_buff
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff_buffed
			}
			remove_province_modifier = ned_low_countries_fort_buff_buffed
		}
		if = {
			limit = { has_province_modifier = fort_barracks_manpower_m }
			remove_province_modifier = fort_barracks_manpower_m
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings destroyed!
	on_obsolete = {
	}

	onmap = yes

	influencing_fort = yes

	ai_will_do = {
		factor = 5
		modifier = {
			factor = 5
			is_capital = yes
			FROM = { num_of_cities = 2 }
			OR = {
				owner = { government = monarchy }
				owner = { government = republic }
				owner = { government = theocracy }
			}
		}
		modifier = {
			factor = 0.5
			island = yes
			NOT = { is_capital = yes }
		}	
		modifier = {
			factor = 0.5
			is_overseas = yes
		}
		modifier = {
			factor = 0
			OR = {
				owner = { government = native }
				FROM = { NOT = { num_of_cities = 2 } }
			}
		}
		modifier = {
			factor = 0.2
			owner = { government = tribal }
		}
		modifier = {
			factor = 0
			any_neighbor_province = {
				owned_by = FROM
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }			
		}
		modifier = {
			factor = 0.5
			any_neighbor_province = {
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }
		}
		modifier = {
			factor = 10
			strategic_location_for_a_fort_trigger = yes
		}
		modifier = {
			factor = 0.6
			NOT = { is_capital = yes }
			OR = {
				has_terrain = grasslands
				has_terrain = farmlands
				has_terrain = desert
				has_terrain = drylands
				has_terrain = steppe
				has_terrain = savannah
				has_terrain = coastal_desert
				has_terrain = coastline
				has_terrain = oasis
				has_terrain = semi_desert
			}
		}
		modifier = {
			factor = 1.4
			OR = {
				has_terrain = forest
				has_terrain = hills
				has_terrain = marsh
				has_terrain = highlands
				has_terrain = jungle
				has_terrain = steppe_mountains
				has_terrain = desert_highlands
			}
		}
		modifier = {
			factor = 1.8
			OR = {
				has_terrain = desert_mountains
				has_terrain = mountain
				has_terrain = himalayas
			}
		}
		modifier = {
			factor = 1.2
			OR = {
				has_province_modifier = arid
				has_province_modifier = tropical
			}
		}
		modifier = {
			factor = 1.25
			FROM = { is_emperor_of_china = yes }
		}
		modifier = {
			factor = 1.2
			province_has_center_of_trade_of_level = 1
		}		
	} 
}

naval_battery = {

	make_obsolete = coastal_defence
	cost = 400
	time = 12
	build_trigger = {
		has_port = yes
		has_fort_building_trigger = yes
	}
	keep_trigger = {
		has_fort_building_trigger = yes	
	}
	modifier = {
		blockade_force_required = 1.0
		hostile_disembark_speed = 1.0
		hostile_fleet_attrition = 5
		local_defensiveness = 0.15
	}
	on_built = {
		custom_tooltip = block_slave_raid_area_m_tt
		hidden_effect = { owner = { save_event_target_as = new_owner } }
		area = {
			limit = {
				owned_by = event_target:new_owner
				has_port = yes
				NOT = { has_province_modifier = block_slave_raid_area_m }
			}
			add_province_modifier = {
				name = block_slave_raid_area_m
				duration = -1
			}
		}
	}
	on_destroyed = {
		hidden_effect = { owner = { save_event_target_as = new_owner } }
		if = {
			limit = {
				NOT = {
					area_for_scope_province = {
						owned_by = event_target:new_owner
						OR = {
							has_building = coastal_defence
							has_building = naval_battery
						}
					}
				}
			}
			area = {
				limit = {
					owned_by = event_target:new_owner
					has_province_modifier = block_slave_raid_area_m
				}
				remove_province_modifier = block_slave_raid_area_m
			}
		}
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 0
			NOT = {
				has_fort_building_trigger = yes
			}
		}
		modifier = {
			factor = 0.1
			building_slot_for_manufactory_trigger = yes
		}
	}
}

################################################
# Tier 3, 17th Century Buildings
################################################
cathedral = {
	make_obsolete = temple

	cost = 300
	time = 12
	modifier = {
		local_missionary_strength = 0.03
		local_tax_modifier = 0.70
	}
	on_built = {
		on_built_tax_building_effect = yes
		on_province_tax_building_built_estate_privileges_effect = yes
		add_development_from_upgrading_or_building = {
			building = cathedral
			obsolete_building = temple
			type = tax
			value = 2
			upgrade_value = 1
		}
		if = {
			limit = {
				FROM = { has_government_attribute = on_church_built_clergy_loyalty }
			}
			FROM = {
				add_estate_loyalty = {
					estate = estate_church
					loyalty = 5
				}
			}
		}
		if = {
			limit = {
				FROM = { has_government_attribute = temples_modifier }
				owned_by = FROM 
			}
			add_province_modifier = {
				name = gov_expanded_temple_rights_mod
				duration = -1
			}
		}
		if = {
			limit = {
				FROM = {
					has_country_flag = mosque_local_unrest_flag
				}
			}
			add_province_modifier = {
				name = turkoman_peaceful_worshipping
				duration = -1
			}
		}
		if = {
			limit = {
				FROM = { has_country_modifier = mam_mosque_great_mosque_generates_crown_land_modifier }
			}
			FROM = {
				change_estate_land_share = {
					estate = all
					share = -0.25
				}
			}
		}
		if = {
			limit = {
				FROM = { has_government_mechanic = blood_gathering_mechanic }
			}
			FROM = {
				add_government_power = {
					mechanic_type = blood_gathering_mechanic
					power_type = blood
					value = 0.5
				}
			}
		}
		add_province_modifier = {
			name = azt_religious_classes
			duration = -1
			hidden = yes
		}
	}
	on_destroyed = {
		on_province_tax_building_destroyed_estate_privileges_effect = yes
		remove_development_from_building = {
			building = cathedral
			type = tax
			value = 2
		}
		if = {
			limit = {
				FROM = {
					has_country_flag = mosque_local_unrest_flag
				}
			}
			remove_province_modifier = turkoman_peaceful_worshipping
		}
		if = {
			limit = {
				FROM = { has_government_attribute = on_church_built_clergy_loyalty }
			}
			FROM = {
				add_estate_loyalty = {
					estate = estate_church
					loyalty = -5
				}
			}
		}
		remove_province_modifier = gov_expanded_temple_rights_mod
		if = {
			limit = {
				FROM = { has_country_modifier = mam_mosque_great_mosque_generates_crown_land_modifier }
			}
			FROM = {
				change_estate_land_share = {
					estate = all
					share = 0.25
				}
			}
		}
		if = {
			limit = {
				FROM = { has_government_mechanic = blood_gathering_mechanic }
			}
			FROM = {
				add_government_power = {
					mechanic_type = blood_gathering_mechanic
					power_type = blood
					value = -1
				}
			}
		}
		if = {
			limit = {
				has_province_modifier = azt_religious_classes
			}
			remove_province_modifier = azt_religious_classes
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 5.25
		modifier = {
			factor = 0.3
			NOT = { development = 10 }
		}
		modifier = {
			factor = 0
			NOT = { base_tax = 4 }
			NOT = { trade_goods = gold }
		}
		modifier = {
			factor = 0.5
			NOT = { base_tax = 5 }
			NOT = { trade_goods = gold }
		}
		modifier = {
			factor = 0.75
			NOT = { tolerance_to_this = 0 }
		}
		modifier = {
			factor = 0.8
			NOT = { has_owner_accepted_culture = yes }
			NOT = { has_owner_culture = yes }
			NOT = { culture_group = ROOT }
		}
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 1.1
			is_in_capital_area = yes
		}
		modifier = {
			factor = 1.25
			FROM = { has_government_attribute = temples_modifier }
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
			NOT = { has_building = temple }
		}
	}
}


university = {
	cost = 500
	time = 24
	modifier = {
		local_development_cost_modifier = -0.1
		allowed_num_of_buildings = 1
	}

	build_trigger = {
		NOT = {
			area_for_scope_province = {
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = university
					has_construction = university
				}
			}
		}
	}
	
	keep_trigger = {
		NOT = {
			area_for_scope_province = {
				NOT = { province_id = root }
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = university
					has_construction = university
				}
			}
		}
	}

	on_built = {
		add_development_from_building = {
			building = university
			type = tax
			value = 2
		}
		custom_tooltip = dif_university_dev_cost_tt
		hidden_effect = { owner = { save_event_target_as = new_owner } }
		area = {
			limit = {
				owned_by = event_target:new_owner
				NOT = { has_province_modifier = dif_university_dev_cost }
			}
			add_province_modifier = {
				name = dif_university_dev_cost
				duration = -1
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = university
			type = tax
			value = 2
		}
		hidden_effect = { owner = { save_event_target_as = new_owner } }
		if = {
			limit = {
				NOT = {
					area_for_scope_province = {
						owned_by = event_target:new_owner
						has_building = university
					}
				}
			}
			area = {
				limit = {
					owned_by = event_target:new_owner
					has_province_modifier = dif_university_dev_cost
				}
				remove_province_modifier = dif_university_dev_cost
			}
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 420 	# Hard coded AI sees no value in this above the 0.01 ducats base. Let's multiply that
		modifier = {
			factor = 0.8
			NOT = { development = 5 }
		}
		modifier = {
			factor = 0.8
			NOT = { development = 10 }
		}
		modifier = {
			factor = 1.2
			development = 20
		}
		modifier = {
			factor = 1.2
			development = 25
		}
		modifier = {
			factor = 1.2
			development = 30
		}
		modifier = {
			factor = 1.2
			development = 35
		}
		modifier = {
			factor = 1.2
			development = 40
		}
		modifier = {
			factor = 1.2
			development = 45
		}
		modifier = {
			factor = 1.2
			development = 50
		}
		modifier = {
			factor = 1.2
			development = 55
		}
		modifier = {
			factor = 1.2
			development = 60
		}
		modifier = {
			factor = 1.5
			province_infrastructure_trigger = yes
		}
		modifier = {
			factor = 0.1
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 0.9
			OR = {
				has_climate = tropical
				has_climate = arid
			}
		}
		modifier = {
			factor = 0.4
			has_climate = arctic
		}
		modifier = {
			factor = 1.2
			OR = {
				has_terrain = grasslands
				has_terrain = drylands
			}
		}
		modifier = {
			factor = 1.2
			has_terrain = farmlands
		}
		modifier = {
			factor = 5
			has_latent_trade_goods = coal
		}
		modifier = {
			factor = 1.5
			FROM = { has_idea_group = economic_ideas  }
		}
		modifier = {
			factor = 1.5
			province_has_center_of_trade_of_level = 1
		}
		modifier = {
			factor = 1.5
			province_has_center_of_trade_of_level = 2
		}
		modifier = {
			factor = 1.5
			province_has_center_of_trade_of_level = 3
		}
		modifier = {
			factor = 2
			is_capital = yes
		}
		modifier = {
			factor = 1.5
			OR = {
				trade_goods = paper
				trade_goods = gems
				trade_goods = glass
				trade_goods = chinaware
				trade_goods = copper
				trade_goods = iron
				trade_goods = coal
				trade_goods = ivory
				trade_goods = slaves
				trade_goods = spices
				trade_goods = fur
				trade_goods = incense
				trade_goods = coffee
				trade_goods = cotton
				trade_goods = sugar
				trade_goods = tobacco
				trade_goods = tea
				trade_goods = cocoa
				trade_goods = wool
				trade_goods = cloth
				trade_goods = silk
				trade_goods = dyes
				trade_goods = salt
				trade_goods = gold
			}
		}
	}
}

trade_depot = {
	cost = 300
	time = 12

	make_obsolete = marketplace

	modifier = {
		province_trade_power_modifier = 1
	}

	on_built = {
		if = {
			limit = {
				FROM = {
					has_estate_privilege = estate_sedentary_subjects_marketplace_bonus
				}
				province_has_center_of_trade_of_level = 1
			}
			add_province_modifier = {
				name = marketplace_bonus_m
				duration = -1
			}
		}
		add_development_from_upgrading_or_building = {
			building = trade_depot
			obsolete_building = marketplace
			type = production
			value = 2
			upgrade_value = 1
		}
	}
	on_destroyed = {
		if = {
			limit = { has_province_modifier = marketplace_bonus_m }
			remove_province_modifier = marketplace_bonus_m
		}
		remove_development_from_building = {
			building = trade_depot
			type = production
			value = 2
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 3.5 # Because hard-coded AI only considers what it will gain, not what its enemies will lose.
		modifier = {
			factor = 0.1
			NOT = { province_has_center_of_trade_of_level = 1 }
			NOT = {	province_trade_power = 10 }
		}
		modifier = {
			factor = 1.5
			is_in_capital_area = yes
		}
		modifier = {
			factor = 2.5
			FROM = {
				home_trade_node = {
					owned_by = FROM
					OR = {
						province_has_center_of_trade_of_level = 1
						province_trade_power = 50
					}
				}
			}
		}
		modifier = {
			factor = 1.5
			any_province_in_state = {
				has_merchant = FROM
				OR = {
					province_has_center_of_trade_of_level = 1
					province_trade_power = 50
				}
			}
		}
		modifier = {
			factor = 0
			NOT = { has_building = marketplace }
			building_slot_for_manufactory_trigger = yes
		}
	}
}

grand_shipyard = {
	cost = 300
	time = 12

	make_obsolete = shipyard

	build_trigger = {
		has_port = yes
	}
	modifier = {
		naval_forcelimit = 4
		ship_recruit_speed = -0.50
		local_ship_repair = 0.50
		local_ship_cost = -0.1
		local_has_man_of_war = yes
		local_has_galleass = yes
	}

	on_built = {
		add_development_from_upgrading_or_building = {
			building = grand_shipyard
			obsolete_building = shipyard
			type = production
			value = 2
			upgrade_value = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = grand_shipyard
			type = production
			value = 2
		}
		if = {
			limit = { has_province_modifier = sca_swe_danish_shipyard }
			remove_province_modifier = sca_swe_danish_shipyard
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 0.4
		modifier = {
			factor = 1.2
			NOT = { has_owner_accepted_culture = yes }
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = trade_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = naval_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = maritime_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = { 
				has_idea_group = exploration_ideas
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				colony = 1
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				colony = 2
			}
		}
		modifier = {
			factor = 1.2
			FROM = {
				colony = 3
			}
		}
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 0.7
			OR = {
				trade_goods = grain
				trade_goods = fish
				trade_goods = livestock
				trade_goods = wine
			}
		}		
		modifier = {
			factor = 0.5
			FROM = {
				AND = {
					NOT = { has_government_attribute = is_merchant_republic }
					NOT = { num_of_ports = 6 }
				}
			}
		}
		modifier = {
			factor = 0
			NOT = { has_building = shipyard }
			building_slot_for_manufactory_trigger = yes
		}
	}
}

training_fields = {
	cost = 300
	time = 12

	make_obsolete = barracks
	modifier = {
		local_manpower_modifier = 1
	}
	
	on_built = {
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_manpower = 1
			}
		}
		add_development_from_upgrading_or_building = {
			building = training_fields
			obsolete_building = barracks
			type = manpower
			value = 2
			upgrade_value = 1
		}
		update_improved_military_buildings_modifier = {
			building = training_fields
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = 0.001
			}
		}
		if = {
			limit = {
				owner = {
					has_country_flag = azt_calpulli_houses_flag
				}
			}
			add_province_modifier = {
				name = azt_barracks_households
				duration = -1
				hidden = yes
			}
		}
	}
	on_destroyed = {
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_manpower = -1
			}
		}
		update_improved_military_buildings_modifier = {
			building = training_fields
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = -0.001
			}
		}
		remove_development_from_building = {
			building = training_fields
			type = manpower
			value = 2
		}
		if = {
			limit = {
				has_province_modifier = azt_barracks_households
			}
			remove_province_modifier = azt_barracks_households
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 6.75
		modifier = {
			factor = 0.2
			NOT = { base_manpower = 3 }
			NOT = { has_building = soldier_households }
		}
		modifier = {
			factor = 0.4
			NOT = { base_manpower = 4 }
			NOT = { has_building = soldier_households }
		}
		modifier = {
			factor = 1.2
			is_in_capital_area = yes
		}	
		modifier = {
			factor = 1.5
			area_for_scope_province = {
				owner = { tag = ROOT }
				province_has_center_of_trade_of_level = 3
			}
		}
		modifier = {
			factor = 2
			has_building = soldier_households
		}
		modifier = {
			factor = 0
			NOT = { has_building = barracks }
			building_slot_for_manufactory_trigger = yes
		}
	}
}


fort_17th = {
	cost = 600
	time = 30

	make_obsolete = fort_16th

	modifier = {
		fort_level = 6
	}

	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		if = {
			limit = {
				FROM = { NOT = { mil_tech = 19 } has_government_attribute = on_fort_built_nobles_loyalty }
			}
			FROM = {
				if = {
					limit = {
						has_estate = estate_nobles
					}
					add_estate_loyalty = {
						estate = estate_nobles
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_maratha
					}
					add_estate_loyalty = {
						estate = estate_maratha
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_rajput
					}
					add_estate_loyalty = {
						estate = estate_rajput
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_mamluks
					}
					add_estate_loyalty = {
						estate = estate_mamluks
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_janissaries
					}
					add_estate_loyalty = {
						estate = estate_janissaries
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_ghilman
					}
					add_estate_loyalty = {
						estate = estate_ghilman
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = nomadic_aristocracy
					}
					add_estate_loyalty = {
						estate = nomadic_aristocracy
						loyalty = 5
					}
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_development_of_castles
				}
				NOT = { has_province_modifier = estate_nobles_development_of_castles_mod }
			}
			add_province_modifier = {
				name = estate_nobles_development_of_castles_mod
				duration = -1
			}
		}
		if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					NOT = {
						full_idea_group = defensive_ideas
					}
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff
				duration = -1
				hidden = yes
			}
		}
		else_if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					full_idea_group = defensive_ideas
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff_buffed
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_vegvar_system
				}
				any_neighbor_province = {
					NOT = { owned_by = ROOT }
				}
			}
			add_province_modifier = {
				name = estate_nobles_vegvar_system_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_vegvar_system_modifier
			}
			remove_province_modifier = estate_nobles_vegvar_system_modifier
		}
		if = {
			limit = {
				has_province_modifier = estate_nobles_development_of_castles_mod
			}
			remove_province_modifier = estate_nobles_development_of_castles_mod
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff
			}
			remove_province_modifier = ned_low_countries_fort_buff
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff_buffed
			}
			remove_province_modifier = ned_low_countries_fort_buff_buffed
		}
		if = {
			limit = { has_province_modifier = fort_barracks_manpower_m }
			remove_province_modifier = fort_barracks_manpower_m
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings destroyed!
	on_obsolete = {
	}

	onmap = yes

	influencing_fort = yes

	ai_will_do = {
		factor = 5
		modifier = {
			factor = 5
			is_capital = yes
			FROM = { num_of_cities = 2 }
			OR = {
				owner = { government = monarchy }
				owner = { government = republic }
				owner = { government = theocracy }
			}
		}
		modifier = {
			factor = 0.5
			island = yes
			NOT = { is_capital = yes }
		}	
		modifier = {
			factor = 0.5
			is_overseas = yes
		}
		modifier = {
			factor = 0
			OR = {
				owner = { government = native }
				FROM = { NOT = { num_of_cities = 2 } }
			}
		}
		modifier = {
			factor = 0.2
			owner = { government = tribal }
		}
		modifier = {
			factor = 0
			any_neighbor_province = {
				owned_by = FROM
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }			
		}
		modifier = {
			factor = 0.5
			any_neighbor_province = {
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }
		}
		modifier = {
			factor = 10
			strategic_location_for_a_fort_trigger = yes
		}
		modifier = {
			factor = 0.6
			NOT = { is_capital = yes }
			OR = {
				has_terrain = grasslands
				has_terrain = farmlands
				has_terrain = desert
				has_terrain = drylands
				has_terrain = steppe
				has_terrain = savannah
				has_terrain = coastal_desert
				has_terrain = coastline
				has_terrain = oasis
				has_terrain = semi_desert
			}
		}
		modifier = {
			factor = 1.4
			OR = {
				has_terrain = forest
				has_terrain = hills
				has_terrain = marsh
				has_terrain = highlands
				has_terrain = jungle
				has_terrain = steppe_mountains
				has_terrain = desert_highlands
			}
		}
		modifier = {
			factor = 1.8
			OR = {
				has_terrain = desert_mountains
				has_terrain = mountain
				has_terrain = himalayas
			}
		}
		modifier = {
			factor = 1.2
			OR = {
				has_province_modifier = arid
				has_province_modifier = tropical
			}
		}
		modifier = {
			factor = 1.25
			FROM = { is_emperor_of_china = yes }
		}
		modifier = {
			factor = 1.2
			province_has_center_of_trade_of_level = 1
		}		
	} 
}



################################################
# Tier 4, 18th Century Buildings
################################################
stock_exchange = {
	cost = 400
	time = 12

	make_obsolete = trade_depot

	modifier = {
		province_trade_power_modifier = 1.25
	}

	on_built = {
		if = {
			limit = {
				FROM = {
					has_estate_privilege = estate_sedentary_subjects_marketplace_bonus
				}
				province_has_center_of_trade_of_level = 1
			}
			add_province_modifier = {
				name = marketplace_bonus_m
				duration = -1
			}
		}
		if = {
			limit = {
				has_province_flag = built_dev_trade_depot
			}
			add_development_from_upgrading_or_building = {
				building = stock_exchange
				obsolete_building = trade_depot
				type = production
				value = 3
				upgrade_value = 1
			}
		}
		else_if = {
			limit = {
				has_province_flag = built_dev_marketplace
			}
			add_development_from_upgrading_or_building = {
				building = stock_exchange
				obsolete_building = marketplace
				type = production
				value = 3
				upgrade_value = 2
			}
		}
		else = {
			add_development_from_building = {
				building = stock_exchange
				type = production
				value = 3
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = stock_exchange
			type = production
			value = 3
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 3.5 # Because hard-coded AI only considers what it will gain, not what its enemies will lose.
		modifier = {
			factor = 0.1
			NOT = { province_has_center_of_trade_of_level = 1 }
			NOT = {	province_trade_power = 10 }
		}
		modifier = {
			factor = 2.5
			FROM = {
				home_trade_node = {
					owned_by = FROM
					OR = {
						province_has_center_of_trade_of_level = 1
						province_trade_power = 50
					}
				}
			}
		}
		modifier = {
			factor = 1.5
			any_province_in_state = {
				has_merchant = FROM
				OR = {
					province_has_center_of_trade_of_level = 1
					province_trade_power = 50
				}
			}
		}
		modifier = {
			factor = 0
			NOT = {
				OR = {
					has_building = trade_depot
					has_building = marketplace
				}
			}
			building_slot_for_manufactory_trigger = yes
		}
	}
}

counting_house = {
	cost = 400
	time = 12

	make_obsolete = workshop
	modifier = {
		local_production_efficiency = 1
	}

	on_built = {
		add_development_from_upgrading_or_building = {
			building = counting_house
			obsolete_building = workshop
			type = production
			value = 2
			upgrade_value = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = counting_house
			type = production
			value = 2
		}
	}
	on_obsolete = {
	}

	allow_in_gold_provinces = no

	ai_will_do = {
		factor = 5.25
		modifier = {
			factor = 0.75
			NOT = { base_production = 3 }
		}
		modifier = {
			factor = 0.5
			NOT = { base_production = 4 }
			OR = {
				trade_goods = grain
				trade_goods = naval_supplies
				trade_goods = fish
				trade_goods = livestock
				trade_goods = wine
				trade_goods = wool
				trade_goods = tropical_wood
			}
		}
		modifier = {
			factor = 2
			OR = {
				has_province_modifier = stora_kopparberget_modifier
				has_province_modifier = granary_of_the_mediterranean
				has_province_modifier = ven_murano_glass_industry
				has_province_modifier = diamond_mines_of_golconda_modifier
				has_province_modifier = coffea_arabica_modifier
				has_province_modifier = skanemarket
				has_province_modifier = spice_islands_modifier
				has_province_modifier = comet_ore_modifier
				has_province_modifier = paradise_modifier
				has_province_modifier = cerro_rico_modifier
				has_province_modifier = ned_house_of_elzevir
				has_province_modifier = bookmarket_of_x
				has_province_modifier = grand_bank_fisheries
				has_province_modifier = diamond_district
				has_province_modifier = jingdezhen_kilns
				has_province_modifier = perfume_capital
			}
		}
		modifier = {
			factor = 0.1
			NOT = { num_free_building_slots = 2 }
			#NOT = { trade_goods = gold }
			NOT = { has_building = workshop }
			NOT = {
				has_manufactory_trigger = yes
			}
		}
	}
}




town_hall = {
	cost = 200
	time = 12

	make_obsolete = courthouse

	modifier = {
		local_state_maintenance_modifier = -0.5
		local_autonomy = -0.2
		local_governing_cost = -0.5
		allowed_num_of_buildings = 1
	}

	on_built = {
		add_development_from_upgrading_or_building = {
			building = town_hall
			obsolete_building = courthouse
			type = tax
			value = 2
			upgrade_value = 1
		}
		if = { 
			limit = { 
				FROM = { has_country_flag = fra_courthouse_bonus_flag }
				NOT = { has_province_modifier = fra_improved_court_houses_modifier }
			}
			add_province_modifier = {
				name = fra_improved_court_houses_modifier
				duration = -1 
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = town_hall
			type = tax
			value = 2
		}
		remove_province_modifier = fra_improved_court_houses_modifier 
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 0.5
			FROM = {
				NOT = {
					governing_capacity_percentage = 0.5
				}
			}
		}
		modifier = {
			factor = 2
			FROM = { governing_capacity_percentage = 0.8 }
		}
		modifier = {
			factor = 3
			FROM = { governing_capacity_percentage = 1 }
		}
		modifier = {
			factor = 5
			FROM = { governing_capacity_percentage = 1.1 }
		}
		modifier = {
			factor = 0
			NOT = { has_building = courthouse }
			building_slot_for_manufactory_trigger = yes
		}
	}
}

drydock = {
	cost = 300
	time = 12

	make_obsolete = dock

	build_trigger = {
		has_port = yes
	}

	modifier = {
		local_sailors_modifier = 1.0
		local_has_man_of_war = yes
		local_has_galleass = yes
	}
	
	on_built = {
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_sailors = 200
			}
		}
		add_development_from_upgrading_or_building = {
			building = drydock
			obsolete_building = dock
			type = production
			value = 2
			upgrade_value = 1
		}
		if = {
			limit = {
				FROM = {
					OR = {
						has_estate_privilege = estate_burghers_dock_trade_power
						has_estate_privilege = estate_vaisyas_dock_trade_power
						has_estate_privilege = estate_jains_dock_trade_power
					}
				}
			}
			add_province_modifier = {
				name = dock_trade_power_m
				duration = -1
			}
		}
	}
	
	on_destroyed = {
		if = {
			limit = {
				FROM = {
					has_government_attribute = manpower_sailors_on_build
				}
			}
			FROM = {
				add_sailors = -200
			}
		}
		remove_development_from_building = {
			building = drydock
			type = production
			value = 2
		}
		if = {
			limit = { has_province_modifier = dock_trade_power_m }
			remove_province_modifier = dock_trade_power_m
		}
	}
	on_obsolete = {
	}


	ai_will_do = {
		factor = 1
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 0
			NOT = { base_manpower = 5 }
			NOT = { 
				OR = {
					province_has_center_of_trade_of_level = 1
					province_has_center_of_trade_of_level = 2
					province_has_center_of_trade_of_level = 3
				}
			}
		}
		modifier = {
			factor = 2
			province_has_center_of_trade_of_level = 3	
		}
		modifier = {
			factor = 0
			NOT = { base_manpower = 4 }
		}		
		modifier = {
			factor = 0.1
			NOT = { base_manpower = 5 }
		}
		modifier = {
			factor = 0.5
			FROM = {
				AND = {
					NOT = { has_government_attribute = is_merchant_republic }
					NOT = { num_of_ports = 6 }
				}
			}
		}
		modifier = {
			factor = 0.25
			FROM = {
				sailors_percentage = 0.75
			}
		}
		modifier = {
			factor = 0.7
			NOT = { has_owner_accepted_culture = yes }
		}
		modifier = {
			factor = 0
			NOT = { has_building = dock }
			building_slot_for_manufactory_trigger = yes
		}
	}
}

conscription_center = {
	cost = 400
	time = 12


	make_obsolete = regimental_camp

	modifier = {
		local_land_forcelimit_modifier = 1
	}
	on_built = {
		add_development_from_upgrading_or_building = {
			building = conscription_center
			obsolete_building = regimental_camp
			type = manpower
			value = 2
			upgrade_value = 1
		}
		hidden_effect = { update_forcelimit_mod = yes }
		update_improved_military_buildings_modifier = {
			building = conscription_center
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = 0.001
			}
		}
		if = {
			limit = {
				owner = {
					has_country_flag = azt_calpulli_houses_flag
				}
			}
			add_province_modifier = {
				name = azt_conscription_households
				duration = -1
				hidden = yes
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = conscription_center
			type = manpower
			value = 2
		}
		hidden_effect = { update_forcelimit_mod = yes }
		update_improved_military_buildings_modifier = {
			building = conscription_center
		}
		if = {
			limit = {
				FROM = {
					mission_completed = jap_tanegashima_teppo
					has_dlc = "Cradle of Civilization" 
				}
			}
			FROM = {
				add_army_professionalism = -0.001
			}
		}
		if = {
			limit = {
				has_province_modifier = azt_conscription_households
			}
			remove_province_modifier = azt_conscription_households
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 420
		modifier = {
			factor = 0.75
			local_autonomy = 25
		}
		modifier = {
			factor = 0.75
			local_autonomy = 35
		}
		modifier = {
			factor = 0.75
			local_autonomy = 45
		}
		modifier = {
			factor = 0.75
			local_autonomy = 55
		}
		modifier = {
			factor = 0.75
			local_autonomy = 65
		}
		modifier = {
			factor = 0.75
			local_autonomy = 75
		}
		modifier = {
			factor = 0.75
			local_autonomy = 85
		}
		modifier = {
			factor = 0.3
			NOT = { development = 5 }
		}
		modifier = {
			factor = 0.3
			NOT = { development = 10 }
		}
		modifier = {
			factor = 1.2
			development = 20
		}
		modifier = {
			factor = 1.2
			development = 25
		}
		modifier = {
			factor = 1.2
			development = 30
		}
		modifier = {
			factor = 1.2
			development = 35
		}
		modifier = {
			factor = 1.2
			development = 40
		}
		modifier = {
			factor = 1.2
			development = 45
		}
		modifier = {
			factor = 1.2
			development = 50
		}
		modifier = {
			factor = 1.2
			development = 55
		}
		modifier = {
			factor = 1.2
			development = 60
		}
		modifier = {
			factor = 1.2
			FROM = {
				has_idea_group = offensive_ideas
			}
		}
		modifier = {
			factor = 1.5
			FROM = {
				has_idea_group = quantity_ideas
			}
		}
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 0
			NOT = { has_building = regimental_camp }
			building_slot_for_manufactory_trigger = yes
		}
	}
}



fort_18th = {
	cost = 800
	time = 30


	make_obsolete = fort_17th

	modifier = {
		fort_level = 8
	}

	# THIS = Province, FROM = Builder(not nessecairly owner, can be overlord)
	on_built = {
		if = {
			limit = {
				FROM = { has_government_attribute = on_fort_built_nobles_loyalty }
			}
			FROM = {
				if = {
					limit = {
						has_estate = estate_nobles
					}
					add_estate_loyalty = {
						estate = estate_nobles
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_maratha
					}
					add_estate_loyalty = {
						estate = estate_maratha
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_rajput
					}
					add_estate_loyalty = {
						estate = estate_rajput
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_mamluks
					}
					add_estate_loyalty = {
						estate = estate_mamluks
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_janissaries
					}
					add_estate_loyalty = {
						estate = estate_janissaries
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = estate_ghilman
					}
					add_estate_loyalty = {
						estate = estate_ghilman
						loyalty = 5
					}
				}
				if = {
					limit = {
						has_estate = nomadic_aristocracy
					}
					add_estate_loyalty = {
						estate = nomadic_aristocracy
						loyalty = 5
					}
				}
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_development_of_castles
				}
				NOT = { has_province_modifier = estate_nobles_development_of_castles_mod }
			}
			add_province_modifier = {
				name = estate_nobles_development_of_castles_mod
				duration = -1
			}
		}
		if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					NOT = {
						full_idea_group = defensive_ideas
					}
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff
				duration = -1
				hidden = yes
			}
		}
		else_if = {
			limit = {
				owner = {
					has_country_flag = ned_buffed_forts_flag
					full_idea_group = defensive_ideas
				}
				region = low_countries_region
			}
			add_province_modifier = {
				name = ned_low_countries_fort_buff_buffed
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_vegvar_system
				}
				any_neighbor_province = {
					NOT = { owned_by = ROOT }
				}
			}
			add_province_modifier = {
				name = estate_nobles_vegvar_system_modifier
				duration = -1
			}
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings made obsolete!
	on_destroyed = {
		if = {
			limit = {
				has_province_modifier = estate_nobles_vegvar_system_modifier
			}
			remove_province_modifier = estate_nobles_vegvar_system_modifier
		}
		if = {
			limit = {
				has_province_modifier = estate_nobles_development_of_castles_mod
			}
			remove_province_modifier = estate_nobles_development_of_castles_mod
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff
			}
			remove_province_modifier = ned_low_countries_fort_buff
		}
		if = {
			limit = {
				has_province_modifier = ned_low_countries_fort_buff_buffed
			}
			remove_province_modifier = ned_low_countries_fort_buff_buffed
		}
		if = {
			limit = { has_province_modifier = fort_barracks_manpower_m }
			remove_province_modifier = fort_barracks_manpower_m
		}
	}

	# THIS = Province, FROM = Destroyer, Will not be called on buildings destroyed!
	on_obsolete = {
	}

	onmap = yes

	influencing_fort = yes

	ai_will_do = {
		factor = 5
		modifier = {
			factor = 5
			is_capital = yes
			FROM = { num_of_cities = 2 }
			OR = {
				owner = { government = monarchy }
				owner = { government = republic }
				owner = { government = theocracy }
			}
		}
		modifier = {
			factor = 0.5
			island = yes
			NOT = { is_capital = yes }
		}	
		modifier = {
			factor = 0.5
			is_overseas = yes
		}
		modifier = {
			factor = 0
			OR = {
				owner = { government = native }
				FROM = { NOT = { num_of_cities = 2 } }
			}
		}
		modifier = {
			factor = 0.2
			owner = { government = tribal }
		}
		modifier = {
			factor = 0
			any_neighbor_province = {
				owned_by = FROM
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }			
		}
		modifier = {
			factor = 0.5
			any_neighbor_province = {
				has_fort_building_trigger = yes
			}
			NOT = { is_capital = yes }
		}
		modifier = {
			factor = 10
			strategic_location_for_a_fort_trigger = yes
		}
		modifier = {
			factor = 0.6
			NOT = { is_capital = yes }
			OR = {
				has_terrain = grasslands
				has_terrain = farmlands
				has_terrain = desert
				has_terrain = drylands
				has_terrain = steppe
				has_terrain = savannah
				has_terrain = coastal_desert
				has_terrain = coastline
				has_terrain = oasis
				has_terrain = semi_desert
			}
		}
		modifier = {
			factor = 1.4
			OR = {
				has_terrain = forest
				has_terrain = hills
				has_terrain = marsh
				has_terrain = highlands
				has_terrain = jungle
				has_terrain = steppe_mountains
				has_terrain = desert_highlands
			}
		}
		modifier = {
			factor = 1.8
			OR = {
				has_terrain = desert_mountains
				has_terrain = mountain
				has_terrain = himalayas
			}
		}
		modifier = {
			factor = 1.2
			OR = {
				has_province_modifier = arid
				has_province_modifier = tropical
			}
		}
		modifier = {
			factor = 1.25
			FROM = { is_emperor_of_china = yes }
		}
		modifier = {
			factor = 1.2
			province_has_center_of_trade_of_level = 1
		}		
	} 
}

################################################
# Manufactories
################################################

manufactory = {
	cost = 500
	time = 60
	modifier = {
		trade_goods_size = 1.0
	}
}

#If trade good assignment changes, also update scripted trigger "has_manufactory trigger"!

wharf = {
	manufactory = {
		naval_supplies
		fish
		salt
	}
	keep_trigger = {
		OR = { 
			trade_goods = naval_supplies
			trade_goods = fish
			trade_goods = salt
		}
	}
	onmap = yes
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1 
		}
		
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		remove_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.75
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = { 
			factor = 0.6
			AND = { 
				NOT = { base_production = 4 }
				NOT = { trade_goods = salt }
			}
		}
		modifier = { 
			factor = 0.3
			trade_goods = fish
		}
		modifier = {
			factor = 0.8
			has_latent_trade_goods = coal
		}
	}
}

weapons = {
	manufactory = {
		copper
		iron
	}
	onmap = yes
	keep_trigger = {
		OR = { 
			trade_goods = copper
			trade_goods = iron
		}
	}
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = manpower 
			value = 1 
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		remove_dev_from_building = {
			building = manufactory 
			type = manpower 
			value = 1
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.75
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = {
			factor = 0.8
			has_latent_trade_goods = coal
		}
	}
}

textile = {
	manufactory = {
		wool
		cloth
		silk
		dyes
	}
	onmap = yes
	keep_trigger = {
		OR = { 
			trade_goods = wool
			trade_goods = cloth
			trade_goods = silk
			trade_goods = dyes
		}
	}
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1 
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		remove_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 0.6
			trade_goods = wool
		}
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.75
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = {
			factor = 0.8
			has_latent_trade_goods = coal
		}
	}
}

plantations = {
	manufactory = {
		coffee
		cotton
		sugar
		tobacco
		tea
		cocoa
	}
	onmap = yes
	keep_trigger = {
		OR = { 
			trade_goods = coffee
			trade_goods = cotton
			trade_goods = sugar
			trade_goods = tobacco
			trade_goods = tea
			trade_goods = cocoa
		}
	}
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1 
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		remove_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.75
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = {
			factor = 0.8
			has_latent_trade_goods = coal
		}
	}
}

tradecompany = {
	manufactory = {
		ivory
		slaves
		spices
		cloves
		fur
		incense
	}
	onmap = yes
	keep_trigger = {
		OR = { 
			trade_goods = ivory
			trade_goods = slaves
			trade_goods = spices
			trade_goods = fur
			trade_goods = incense
			trade_goods = cloves
		}
	}
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1 
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		remove_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 0.75
			trade_goods = incense
		}
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.75
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = {
			factor = 0.8
			has_latent_trade_goods = coal
		}
	}
}

farm_estate = {
	manufactory = {
		grain
		livestock
		wine
	}
	onmap = yes
	keep_trigger = {
		OR = { 
			trade_goods = grain
			trade_goods = livestock
			trade_goods = wine
		}
	}
	on_built = {
		if = {
			limit = {
				FROM = {
					OR = {
						has_estate_privilege = estate_mamluks_landowners
						has_estate_privilege = estate_nomadic_aristocracy_landowners
					}
				}
			}
			add_province_modifier = {
				name = farm_estate_manpower_m
				duration = -1
			}
		}
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1
		}
		if = {
			limit = {
				FROM = {
					has_country_flag = geo_wine_manufactory_flag
				}
			}
			add_base_production = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory 
			type = production 
			value = 2 
		}
		remove_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1
		}
		if = {
			limit = {
				FROM = {
					has_country_flag = geo_wine_manufactory_flag
				}
			}
			add_base_production = -1
		}
		if = {
			limit = { has_province_modifier = farm_estate_manpower_m }
			remove_province_modifier = farm_estate_manpower_m
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 0.8
		modifier = {
			factor = 0.75
			NOT = { development = 10 }
		}
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.75
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = {
			factor = 0.5
			has_latent_trade_goods = coal
		}
		modifier = {
			factor = 0.35
			FROM = { adm_tech = 15 }
		}
		modifier = {
			factor = 1.5
			farm_estate_privilege_trigger = yes
		}
	}
}

mills = {
	manufactory = {
		paper
		gems
		tropical_wood
		glass
		chinaware
	}
	onmap = yes
	keep_trigger = {
		OR = { 
			trade_goods = paper
			trade_goods = gems
			trade_goods = tropical_wood
			trade_goods = glass
			trade_goods = chinaware
		}
	}
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1 
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		remove_dev_from_building = {
			building = manufactory 
			type = production 
			value = 1
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 4
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.5
			AND = {
				trade_goods = tropical_wood
				NOT = { base_production = 4 }
			}
		}
		modifier = {
			factor = 0.75
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = {
			factor = 0.8
			has_latent_trade_goods = coal
		}
	}
}

furnace = {
	manufactory = {
		coal
	}

	potential = {
		has_dlc = "Rule Britannia"
	}

	modifier = {
		global_trade_goods_size_modifier = 0.05 #National Bonus
	}
	onmap = yes
	show_separate = yes # Means as a manufactory it will be shown according to the old way
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 100
		modifier = {
			factor = 1.2
			OR = {
				has_building = workshop
				has_building = counting_house
			}
		}
		modifier = {
			factor = 0.1
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
	}
}

ramparts = {
	cost = 500
	time = 60
	#manufactory = {
	#	all
	#}
	build_trigger = {
		has_fort_building_trigger = yes
	}
	
	keep_trigger = {
		has_fort_building_trigger = yes
	}	

	modifier = {
		fort_level = 1
		local_defensiveness = 0.15
		local_defender_dice_roll_bonus = 1
	}
	onmap = no
	show_separate = yes # Means as a manufactory it will be shown according to the old way
	
	on_built = {
		add_dev_from_building = {
			building = manufactory 
			type = manpower 
			value = 1 
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = estate_nobles_development_of_castles
				}
				NOT = { has_province_modifier = estate_nobles_development_of_castles_ramparts_mod }
			}
			add_province_modifier = {
				name = estate_nobles_development_of_castles_ramparts_mod
				duration = -1
			}
		}
	}
	
	on_destroyed = {
		if = {
			limit = { has_province_modifier = per_reinforced_defenses }
			remove_province_modifier = per_reinforced_defenses
		}
		remove_dev_from_building = {
			building = manufactory 
			type = manpower 
			value = 1
		}
		if = {
			limit = {
				has_province_modifier = estate_nobles_development_of_castles_ramparts_mod
			}
			remove_province_modifier = estate_nobles_development_of_castles_ramparts_mod
		}
	}
	ai_will_do = {
		factor = 5
		modifier = {
			factor = 1.667
			OR = {
				has_terrain = forest
				has_terrain = hills
				has_terrain = marsh
				has_terrain = highlands
				has_terrain = jungle
			}
		}
		modifier = {
			factor = 2.5
			has_terrain = mountain
		}
		modifier = {
			factor = 1.25
			trade_goods = salt
		}
		modifier = {
			factor = 1.25
			OR = {
				has_province_modifier = arid
				has_province_modifier = tropical
			}
		}
		modifier = {
			factor = 1.5
			FROM = {
				has_idea_group = defensive_ideas
			}
		}
		modifier = {
			factor = 0
			building_slot_for_manufactory_trigger = yes
		}
	}
}

soldier_households = {
	manufactory = {
		all
	}

	bonus_manufactory = { # Will apply an extra modifier if these goods
		grain
		fish
		livestock
		wine
	}

	modifier = {
		local_manpower = 0.6
	}
	bonus_modifier = {
		local_manpower = 0.6
	}
	onmap = no
	show_separate = yes # Means as a manufactory it will be shown according to the old way
	on_built = {
		add_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		add_dev_from_building = {
			building = manufactory 
			type = manpower 
			value = 1 
		}
		if = {
			limit = {
				FROM = {
					has_government_attribute = improved_military_buildings
				}
			}
			add_province_modifier = {
				name = wei_suo_system_reform_soldier_households_modifier
				duration = -1
			}
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = manufactory
			type = production
			value = 2
		}
		remove_dev_from_building = {
			building = manufactory 
			type = manpower 
			value = 1
		}
		if = {
			limit = {
				has_province_modifier = wei_suo_system_reform_soldier_households_modifier
			}
			remove_province_modifier = wei_suo_system_reform_soldier_households_modifier
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 8.5
		modifier = {
			factor = 0.2
			NOT = {
				OR = {
					trade_goods = gold
					trade_goods = grain
					trade_goods = fish
					trade_goods = livestock
					trade_goods = wine
					trade_goods = wool
				}
			}
		}
		modifier = {
			factor = 1.5
			OR = {
				trade_goods = grain
				trade_goods = fish
				trade_goods = livestock
				#trade_goods = wine
			}
		}
		modifier = {
			factor = 0.5
			has_latent_trade_goods = coal
		}
		modifier = {
			factor = 2
			OR = {
				has_building = barracks
				has_building = conscription_center
			}
		}
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
		}
		modifier = {
			factor = 1.5
			FROM = {
				has_idea_group = quantity_ideas
			}
		}
		modifier = {
			factor = 1.3
			FROM = {
				has_idea_group = aristocracy_ideas
			}
		}
		modifier = {
			factor = 1.3
			FROM = {
				religion = orthodox
			}
		}
		modifier = {
			factor = 1.5
			area_for_scope_province = {
				owner = { tag = ROOT }
				province_has_center_of_trade_of_level = 3
			}
		}
		modifier = {
			factor = 0.66
			AND = {
				NOT = { has_owner_accepted_culture = yes }
				NOT = { has_owner_culture = yes }
				NOT = { culture_group = ROOT }
			}
		}
	}
}

impressment_offices = {
	manufactory = {
		all
	}

	bonus_manufactory = { # Will apply an extra modifier if these goods
		salt
		fish
		naval_supplies
		tropical_wood
	}

	build_trigger = {
		has_port = yes
	}

	modifier = {
		local_sailors = 250
		ship_recruit_speed = -0.25
		local_ship_cost = -0.05
	}
	bonus_modifier = {
		local_sailors = 250
		ship_recruit_speed = -0.1
		local_ship_cost = -0.05
	}
	onmap = no
	show_separate = yes # Means as a manufactory it will be shown according to the old way
	on_built = {
		add_development_from_building = {
			building = impressment_offices
			type = manpower
			value = 2
		}
		add_dev_from_building = {
			building = impressment_offices 
			type = manpower 
			value = 1 
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = impressment_offices
			type = manpower
			value = 2
		}
		remove_dev_from_building = {
			building = impressment_offices 
			type = manpower 
			value = 1 
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 2
		modifier = {
			factor = 0.1
			NOT = {
				OR = {
					trade_goods = gold
					trade_goods = salt
					trade_goods = fish
					trade_goods = naval_supplies
					trade_goods = tropical_wood
				}
			}
		}
		modifier = {
			factor = 0.25
			NOT = {
				FROM = {
					OR = {
						has_idea_group = maritime_ideas
						has_idea_group = naval_ideas
					}
				}
			}
		}
		modifier = {
			factor = 0.8
			has_latent_trade_goods = coal
		}
		modifier = {
			factor = 0
			FROM = { is_tribal = yes }
		}
		modifier = {
			factor = 0
			FROM = { primitives = yes }
		}
		modifier = {
			factor = 0
			FROM = { 
				NOT = { num_of_ports = 1 }
				NOT = { is_colonial_nation = yes }
			}
		}
	}
}


state_house = {
	cost = 500
	time = 60
	#manufactory = {
	#	all
	#}

	#bonus_manufactory = { # Will apply an extra modifier if these goods
	#	paper
	#	glass
	#	gems
	#}

	build_trigger = {
		NOT = {
			area_for_scope_province = {
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = state_house
					has_construction = state_house
				}
			}
		}
	}
	
	keep_trigger = {
		NOT = {
			area_for_scope_province = {
				NOT = { province_id = root }
				owner = {
					tag = ROOT
				}
				OR = {
					has_building = state_house
					has_construction = state_house
				}
			}
		}
	}

	modifier = {
		statewide_governing_cost = -0.25
		min_local_autonomy = -10
		local_governing_cost = -0.15
		local_governing_cost_increase = -10
		#allowed_num_of_buildings = 1
	}
	#bonus_modifier = {
	#	statewide_governing_cost = -0.2
	#	min_local_autonomy = -5
	#}
	onmap = no
	show_separate = yes # Means as a manufactory it will be shown according to the old way
	on_built = {
		add_development_from_building = {
			building = state_house
			type = tax
			value = 2
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = state_house
			type = tax
			value = 2
		}
	}
	on_obsolete = {
	}

	ai_will_do = {
		factor = 400
		modifier = {
			factor = 0.25
			NOT = { is_state = yes }
			is_owned_by_trade_company = no
		}
		modifier = {
			factor = 0.25
			area_for_scope_province = {
				owner = { tag = ROOT }
				is_capital = yes
			}
		}
		modifier = {
			factor = 5
			is_owned_by_trade_company = yes
		}
		modifier = {
			factor = 0.5
			FROM = {
				NOT = {
					governing_capacity_percentage = 0.5
				}
			}
		}
		modifier = {
			factor = 2
			FROM = { governing_capacity_percentage = 0.8 }
		}
		modifier = {
			factor = 3
			FROM = { governing_capacity_percentage = 1 }
		}
		modifier = {
			factor = 5
			FROM = { governing_capacity_percentage = 1.1 }
		}
		modifier = {
			factor = 5
			development = 40
			is_in_capital_area = no
		}
		modifier = {
			factor = 2
			development = 30
		}
		modifier = {
			factor = 2
			development = 20
		}
		modifier = {
			factor = 0.25
			building_slot_for_manufactory_trigger = yes
		}
	}
}

